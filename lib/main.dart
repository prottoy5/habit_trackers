import 'dart:async';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:shared_preferences/shared_preferences.dart';

import 'firebase_options.dart'; // generated by flutterfire configure
import 'providers/auth_provider.dart' as my_auth;
import 'providers/habits_provider.dart';
import 'providers/quotes_provider.dart';
import 'providers/theme_provider.dart';
import 'providers/profile_provider.dart';
import 'screens/auth_screen.dart';
import 'screens/home_screen.dart';
import 'screens/splash_screen.dart';

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();

  // Proper Firebase initialization for all platforms
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  // Enable Firestore offline persistence
  if (kIsWeb) {
    await FirebaseFirestore.instance.enablePersistence(
        const PersistenceSettings(synchronizeTabs: true));
  } else {
    FirebaseFirestore.instance.settings =
    const Settings(persistenceEnabled: true);
  }

  // Load theme preference
  final prefs = await SharedPreferences.getInstance();
  final isDark = prefs.getBool('isDark') ?? false;

  runApp(MultiProvider(
    providers: [
      ChangeNotifierProvider(create: (_) => ThemeProvider(isDark: isDark)),
      ChangeNotifierProvider(create: (_) => my_auth.AuthProvider()..restoreSession()),
      ChangeNotifierProvider(create: (_) => ProfileProvider()),
      ChangeNotifierProvider(create: (_) => HabitsProvider()),
      ChangeNotifierProvider(create: (_) => QuotesProvider()),
    ],
    child: const HabitZenApp(),
  ));
}

class HabitZenApp extends StatelessWidget {
  const HabitZenApp({super.key});

  @override
  Widget build(BuildContext context) {
    final theme = context.watch<ThemeProvider>();
    final auth = context.watch<my_auth.AuthProvider>();

    return MaterialApp(
      title: 'HabitZen',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(
            seedColor: Colors.teal, brightness: Brightness.light),
        useMaterial3: true,
      ),
      darkTheme: ThemeData(
        colorScheme: ColorScheme.fromSeed(
            seedColor: Colors.teal, brightness: Brightness.dark),
        useMaterial3: true,
      ),
      themeMode: theme.isDark ? ThemeMode.dark : ThemeMode.light,
      home: Builder(
        builder: (_) {
          if (auth.initializing) return const SplashScreen();
          if (auth.user == null) return const AuthScreen();
          return const HomeScreen();
        },
      ),
    );
  }
}
